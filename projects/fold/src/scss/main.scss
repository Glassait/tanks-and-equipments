@use 'sass:list';
@use 'sass:map';
@use './abstract/fonts' as *;
@use './abstract/width' as *;
@use './abstract/grids' as *;
@use './abstract/spacings' as *;
@use './abstract/colors' as *;
@use './class-generator' as *;

$font-face: (
    ('roboto-condensed', 100, null, 'Roboto_Condensed/RobotoCondensed-Thin'),
    ('roboto-condensed', 100, italic, 'Roboto_Condensed/RobotoCondensed-ThinItalic'),
    ('roboto-condensed', 200, null, 'Roboto_Condensed/RobotoCondensed-ExtraLight'),
    ('roboto-condensed', 200, italic, 'Roboto_Condensed/RobotoCondensed-ExtraLightItalic'),
    ('roboto-condensed', 300, null, 'Roboto_Condensed/RobotoCondensed-Light'),
    ('roboto-condensed', 300, italic, 'Roboto_Condensed/RobotoCondensed-LightItalic'),
    ('roboto-condensed', 400, null, 'Roboto_Condensed/RobotoCondensed-Regular'),
    ('roboto-condensed', 500, null, 'Roboto_Condensed/RobotoCondensed-Medium'),
    ('roboto-condensed', 500, italic, 'Roboto_Condensed/RobotoCondensed-MediumItalic'),
    ('roboto-condensed', 600, null, 'Roboto_Condensed/RobotoCondensed-SemiBold'),
    ('roboto-condensed', 600, italic, 'Roboto_Condensed/RobotoCondensed-SemiBoldItalic'),
    ('roboto-condensed', 700, null, 'Roboto_Condensed/RobotoCondensed-Bold'),
    ('roboto-condensed', 700, italic, 'Roboto_Condensed/RobotoCondensed-BoldItalic'),
    ('roboto-condensed', 800, null, 'Roboto_Condensed/RobotoCondensed-ExtraBold'),
    ('roboto-condensed', 800, italic, 'Roboto_Condensed/RobotoCondensed-ExtraBoldItalic'),
    ('roboto-condensed', 900, null, 'Roboto_Condensed/RobotoCondensed-Black'),
    ('roboto-condensed', 900, italic, 'Roboto_Condensed/RobotoCondensed-BlackItalic'),
    ('roboto', 100, null, 'Roboto/Roboto-Thin'),
    ('roboto', 100, italic, 'Roboto/Roboto-ThinItalic'),
    ('roboto', 300, null, 'Roboto/Roboto-Light'),
    ('roboto', 300, italic, 'Roboto/Roboto-LightItalic'),
    ('roboto', 400, null, 'Roboto/Roboto-Regular'),
    ('roboto', 500, null, 'Roboto/Roboto-Medium'),
    ('roboto', 500, italic, 'Roboto/Roboto-MediumItalic'),
    ('roboto', 700, null, 'Roboto/Roboto-Bold'),
    ('roboto', 700, italic, 'Roboto/Roboto-BoldItalic'),
    ('roboto', 900, null, 'Roboto/Roboto-Black'),
    ('roboto', 900, italic, 'Roboto/Roboto-BlackItalic')
);

@each $properties in $font-face {
    $name: list.nth($properties, 1);
    $weight: list.nth($properties, 2);
    $style: list.nth($properties, 3);
    $url: list.nth($properties, 4);

    @font-face {
        font-family: $name;
        font-weight: $weight;
        @if $style {
            font-style: $style;
        }
        src: url('../fonts/#{$url}.ttf') format('truetype');
    }
}

h1 {
    @extend .title-1;
}

h2 {
    @extend .title-2;
}

h3 {
    @extend .title-3;
}

h4 {
    @extend .subtitle-1;
}

*,
*::before,
*::after {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

img,
picture,
svg,
video {
    display: block;
    max-width: 100%;
}

html {
    color-scheme: dark;
}

body {
    @extend %min-h-dvh;
}

.body-interface {
    display: grid;

    @extend %min-h-dvh, .gap-40;

    @include grid-rows(auto 1fr auto);
}

input,
textarea,
select,
button {
    font: inherit;
}

a {
    cursor: pointer;
    text-decoration: none;
    color: map.get($neutral, 50);

    @extend .caption-2;

    &:not([disabled='true']):hover {
        text-decoration: underline;
    }

    &:not([disabled='true']):focus-visible {
        outline-offset: map.get($spacings, 2);
        outline: map.get($neutral, 50) solid map.get($spacings, 2);
    }

    &[disabled='true'] {
        pointer-events: none;
        color: rgba(map.get($neutral, 400), map.get($opacity, 40));
    }
}
